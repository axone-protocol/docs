name: Lint

on:
  workflow_call:

  push:
    branches: [main]

  pull_request:
    branches: [main]

concurrency:
  group: lint-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint-commits:
    runs-on: ubuntu-22.04
    if: github.actor != 'dependabot[bot]'
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check commits
        uses: wagoid/commitlint-github-action@v5

  lint-markdown:
    runs-on: ubuntu-22.04
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Lint markdown files
        uses: avto-dev/markdown-lint@v1.5.0
        with:
          args: "**/*.md"
          ignore: contracts/**/*.md contracts_versioned_docs/**/*.md modules/**/*.md modules_versioned_docs/**/*.md commands/**/*.md commands_versioned_docs/**/*.md

  lint-yaml:
    runs-on: ubuntu-22.04
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Lint yaml files
        uses: ibiqlik/action-yamllint@v3.1.1

  lint-json:
    runs-on: ubuntu-22.04
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Lint json files
        run: |
          sudo apt install -y jsonlint
          find ./ -type f -name "*.json" -exec sh -c '
            for file do
              if ! jsonlint-php -q "$file"; then
                echo "‚ùå $file"
                export FAILED=1
              else
                echo "‚úÖ $file"
              fi
            done
            if [ "${FAILED}" = "1" ]; then
              exit 1
            fi
          ' sh {} +

  lint-image:
    runs-on: ubuntu-22.04
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Lint image files
        run: |
          FAILED=0
          for file in $(find "$FOLDER" -regextype posix-egrep -regex '.+\.(bmp|ico|jpg|jpeg|png|svg|webp)'); do
            type=$(identify $file | awk '{print $2}')
            if [[ $type =~ ^(WEBP|SVG|ICO)$ ]]; then
              echo "‚úÖ $file"
            else
              >&2 echo "‚ùå $file incorrect. Please use only webp or svg format. üôè"
              FAILED=1
            fi
          done
          if [ "${FAILED}" = "1" ]; then
            exit 1
          fi
        env:
          FOLDER: ./static

  lint-image-size:
    runs-on: ubuntu-22.04
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Lint image files
        run: |
          MAX_SIZE=200000
          FAILED=0
          for file in $(find "$FOLDER" -regextype posix-egrep -regex '.+\.(bmp|ico|jpg|jpeg|png|svg|webp)'); do
            size=$(wc -c "$file" | awk '{print $1}')
            if [ "$size" -gt "$MAX_SIZE" ]; then
                >&2 echo "‚ùå $file is $size. Please reduce its size to a maximum of $MAX_SIZE. üôè"
                FAILED=1
            else
                echo "‚úÖ $file"
            fi
          done
          if [ "${FAILED}" = "1" ]; then
              exit 1
          fi
        env:
          FOLDER: ./static

  report-new-dependencies:
    runs-on: ubuntu-22.04
    if: github.event_name == 'pull_request' && github.actor != 'dependabot[bot]'
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Check for new dependencies
        uses: hiwelo/new-dependencies-action@1.0.1
        with:
          token: ${{ secrets.OKP4_TOKEN }}

  lint-branch-name:
    runs-on: ubuntu-22.04
    if: github.actor != 'dependabot[bot]' && github.event_name == 'pull_request' && (github.event.action == 'opened')
    steps:
      - name: Check branch name conventions
        uses: AlbertHernandez/branch-name-action@v1.0.2
        with:
          branch_pattern: "feat|fix|build|ci|docs|style|refactor|perf|test|chore"
          comment_for_invalid_branch_name: |
            üôã‚Äç Oops! This branch name does not follow the naming convention.
            <hr>
            Please, see the following branch naming convention:
            Branch naming convention | Purpose
            ------------------------ | -------
            `feat/**`                | A new feature
            `fix/**`                 | A bug fix
            `build/**`               | Changes that affect the build system (npm, mavem, poetry)
            `ci/**`                  | Changes to the CI configuration
            `docs/**`                | Documentation only changes
            `style/**`               | Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc)
            `refactor/**`            | Code changes that neither fixe a bug nor adds a feature
            `perf/**`                | Code changes that improve performance
            `test/**`                | When adding tests or correcting existing tests
            `chore/**`               | Other changes that don't modify source
          fail_if_invalid_branch_name: "true"
          ignore_branch_pattern: "main"
      - name: Close non-compliant branch
        if: ${{ failure() }}
        uses: codelytv/no-pull-requests@v1
        with:
          GITHUB_TOKEN: ${{ secrets.OKP4_TOKEN }}
          message: üôÖ Closing the PR because it does not respect naming conventions. Edit the branch name and submit a new PR.
    env:
      GITHUB_TOKEN: ${{ secrets.OKP4_TOKEN }}

  lint-scss:
    runs-on: ubuntu-22.04
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Setup node environment (for building)
        uses: actions/setup-node@v3
        with:
          node-version: 16.18

      - name: Fetch dependencies
        run: |
          yarn

      - name: Lint scss
        run: |
          yarn stylelint '**/*.scss'
