"use strict";(self.webpackChunk_axone_docs=self.webpackChunk_axone_docs||[]).push([[36887],{41669:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>d});var r=t(85893),s=t(11151);const o={},a=void 0,i={id:"okp4d_query_wasm_contract",title:"okp4d_query_wasm_contract",description:"okp4d query wasm contract",source:"@site/commands_versioned_docs/version-v5.0.0/okp4d_query_wasm_contract.md",sourceDirName:".",slug:"/okp4d_query_wasm_contract",permalink:"/fr/commands/v5.0.0/okp4d_query_wasm_contract",draft:!1,unlisted:!1,tags:[],version:"v5.0.0",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"okp4d_query_wasm_contract-state_smart",permalink:"/fr/commands/v5.0.0/okp4d_query_wasm_contract-state_smart"},next:{title:"okp4d_query_wasm_libwasmvm-version",permalink:"/fr/commands/v5.0.0/okp4d_query_wasm_libwasmvm-version"}},c={},d=[{value:"okp4d query wasm contract",id:"okp4d-query-wasm-contract",level:2},{value:"Synopsis",id:"synopsis",level:3},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3}];function l(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"okp4d-query-wasm-contract",children:"okp4d query wasm contract"}),"\n",(0,r.jsx)(n.p,{children:"Prints out metadata of a contract given its address"}),"\n",(0,r.jsx)(n.h3,{id:"synopsis",children:"Synopsis"}),"\n",(0,r.jsx)(n.p,{children:"Prints out metadata of a contract given its address"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"okp4d query wasm contract [bech32_address] [flags]\n"})}),"\n",(0,r.jsx)(n.h3,{id:"options",children:"Options"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for contract\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")\n  -o, --output string      Output format (text|json) (default "text")\n'})}),"\n",(0,r.jsx)(n.h3,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'      --chain-id string   The network chain ID (default "okp4d")\n'})}),"\n",(0,r.jsx)(n.h3,{id:"see-also",children:"SEE ALSO"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/fr/commands/v5.0.0/okp4d_query_wasm",children:"okp4d query wasm"}),"\t - Querying commands for the wasm module"]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>i,a:()=>a});var r=t(67294);const s={},o=r.createContext(s);function a(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);