"use strict";(self.webpackChunk_axone_docs=self.webpackChunk_axone_docs||[]).push([[35708],{42334:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>l,frontMatter:()=>a,metadata:()=>c,toc:()=>u});var o=n(85893),r=n(11151);const a={},s=void 0,c={id:"okp4d_query_auth_accounts",title:"okp4d_query_auth_accounts",description:"okp4d query auth accounts",source:"@site/commands_versioned_docs/version-v5.0.0/okp4d_query_auth_accounts.md",sourceDirName:".",slug:"/okp4d_query_auth_accounts",permalink:"/fr/commands/v5.0.0/okp4d_query_auth_accounts",draft:!1,unlisted:!1,tags:[],version:"v5.0.0",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"okp4d_query_auth_account",permalink:"/fr/commands/v5.0.0/okp4d_query_auth_account"},next:{title:"okp4d_query_auth_address-by-acc-num",permalink:"/fr/commands/v5.0.0/okp4d_query_auth_address-by-acc-num"}},i={},u=[{value:"okp4d query auth accounts",id:"okp4d-query-auth-accounts",level:2},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3}];function d(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h2,{id:"okp4d-query-auth-accounts",children:"okp4d query auth accounts"}),"\n",(0,o.jsx)(t.p,{children:"Query all the accounts"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:"okp4d query auth accounts [flags]\n"})}),"\n",(0,o.jsx)(t.h3,{id:"options",children:"Options"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:'      --count-total        count total number of records in all-accounts to query for\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for accounts\n      --limit uint         pagination limit of all-accounts to query for (default 100)\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")\n      --offset uint        pagination offset of all-accounts to query for\n  -o, --output string      Output format (text|json) (default "text")\n      --page uint          pagination page of all-accounts to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string    pagination page-key of all-accounts to query for\n      --reverse            results are sorted in descending order\n'})}),"\n",(0,o.jsx)(t.h3,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:'      --chain-id string   The network chain ID (default "okp4d")\n'})}),"\n",(0,o.jsx)(t.h3,{id:"see-also",children:"SEE ALSO"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.a,{href:"/fr/commands/v5.0.0/okp4d_query_auth",children:"okp4d query auth"}),"\t - Querying commands for the auth module"]}),"\n"]})]})}function l(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},11151:(e,t,n)=>{n.d(t,{Z:()=>c,a:()=>s});var o=n(67294);const r={},a=o.createContext(r);function s(e){const t=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),o.createElement(a.Provider,{value:t},e.children)}}}]);