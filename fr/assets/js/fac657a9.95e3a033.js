"use strict";(self.webpackChunk_axone_docs=self.webpackChunk_axone_docs||[]).push([[43728],{58389:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>i,default:()=>u,frontMatter:()=>d,metadata:()=>r,toc:()=>l});var t=s(85893),o=s(11151);const d={},i=void 0,r={id:"axoned_keys_show",title:"axoned_keys_show",description:"axoned keys show",source:"@site/commands/axoned_keys_show.md",sourceDirName:".",slug:"/axoned_keys_show",permalink:"/fr/commands/next/axoned_keys_show",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"axoned_keys_rename",permalink:"/fr/commands/next/axoned_keys_rename"},next:{title:"axoned_prune",permalink:"/fr/commands/next/axoned_prune"}},a={},l=[{value:"axoned keys show",id:"axoned-keys-show",level:2},{value:"Synopsis",id:"synopsis",level:3},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3}];function c(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"axoned-keys-show",children:"axoned keys show"}),"\n",(0,t.jsx)(n.p,{children:"Retrieve key information by name or address"}),"\n",(0,t.jsx)(n.h3,{id:"synopsis",children:"Synopsis"}),"\n",(0,t.jsx)(n.p,{children:'Display keys details. If multiple names or addresses are provided,\nthen an ephemeral multisig key will be created under the name "multi"\nconsisting of all the keys provided by name and multisig threshold.'}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"axoned keys show [name_or_address [name_or_address...]] [flags]\n"})}),"\n",(0,t.jsx)(n.h3,{id:"options",children:"Options"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'  -a, --address                  Output the address only (cannot be used with --output)\n      --bech string              The Bech32 prefix encoding for a key (acc|val|cons) (default "acc")\n  -d, --device                   Output the address in a ledger device (cannot be used with --pubkey)\n  -k, --did                      Output the did:key only (overrides --output)\n  -h, --help                     help for show\n      --multisig-threshold int   K out of N required signatures (default 1)\n  -p, --pubkey                   Output the public key only (cannot be used with --output)\n'})}),"\n",(0,t.jsx)(n.h3,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'      --keyring-backend string   Select keyring\'s backend (os|file|kwallet|pass|test|memory) (default "test")\n      --keyring-dir string       The client Keyring directory; if omitted, the default \'home\' directory will be used\n      --output string            Output format (text|json) (default "text")\n'})}),"\n",(0,t.jsx)(n.h3,{id:"see-also",children:"SEE ALSO"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/fr/commands/next/axoned_keys",children:"axoned keys"}),"\t - Manage your application's keys"]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},11151:(e,n,s)=>{s.d(n,{Z:()=>r,a:()=>i});var t=s(67294);const o={},d=t.createContext(o);function i(e){const n=t.useContext(d);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),t.createElement(d.Provider,{value:n},e.children)}}}]);