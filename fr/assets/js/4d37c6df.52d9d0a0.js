"use strict";(self.webpackChunk_axone_docs=self.webpackChunk_axone_docs||[]).push([[93807],{69397:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>s,metadata:()=>r,toc:()=>d});var t=o(85893),i=o(11151);const s={},a=void 0,r={id:"axoned_config_migrate",title:"axoned_config_migrate",description:"axoned config migrate",source:"@site/commands/axoned_config_migrate.md",sourceDirName:".",slug:"/axoned_config_migrate",permalink:"/fr/commands/next/axoned_config_migrate",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"axoned_config_home",permalink:"/fr/commands/next/axoned_config_home"},next:{title:"axoned_config_set",permalink:"/fr/commands/next/axoned_config_set"}},c={},d=[{value:"axoned config migrate",id:"axoned-config-migrate",level:2},{value:"Synopsis",id:"synopsis",level:3},{value:"Options",id:"options",level:3},{value:"SEE ALSO",id:"see-also",level:3}];function l(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"axoned-config-migrate",children:"axoned config migrate"}),"\n",(0,t.jsx)(n.p,{children:"Migrate Cosmos SDK app configuration file to the specified version"}),"\n",(0,t.jsx)(n.h3,{id:"synopsis",children:"Synopsis"}),"\n",(0,t.jsx)(n.p,{children:"Migrate the contents of the Cosmos SDK app configuration (app.toml) to the specified version.\nThe output is written in-place unless --stdout is provided.\nIn case of any error in updating the file, no output is written."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"axoned config migrate [target-version] <app-toml-path> (options) [flags]\n"})}),"\n",(0,t.jsx)(n.h3,{id:"options",children:"Options"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"  -h, --help            help for migrate\n      --skip-validate   skip configuration validation (allows to migrate unknown configurations)\n      --stdout          print the updated config to stdout\n      --verbose         log changes to stderr\n"})}),"\n",(0,t.jsx)(n.h3,{id:"see-also",children:"SEE ALSO"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/fr/commands/next/axoned_config",children:"axoned config"}),"\t - Utilities for managing application configuration"]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},11151:(e,n,o)=>{o.d(n,{Z:()=>r,a:()=>a});var t=o(67294);const i={},s=t.createContext(i);function a(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);