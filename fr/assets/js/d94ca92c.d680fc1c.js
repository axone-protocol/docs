"use strict";(self.webpackChunk_axone_docs=self.webpackChunk_axone_docs||[]).push([[54595],{7660:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>a,toc:()=>l});var s=t(85893),o=t(11151);const r={},i=void 0,a={id:"axoned_query_wasm_pinned",title:"axoned_query_wasm_pinned",description:"axoned query wasm pinned",source:"@site/commands/axoned_query_wasm_pinned.md",sourceDirName:".",slug:"/axoned_query_wasm_pinned",permalink:"/fr/commands/next/axoned_query_wasm_pinned",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"axoned_query_wasm_params",permalink:"/fr/commands/next/axoned_query_wasm_params"},next:{title:"axoned_rollback",permalink:"/fr/commands/next/axoned_rollback"}},d={},l=[{value:"axoned query wasm pinned",id:"axoned-query-wasm-pinned",level:2},{value:"Synopsis",id:"synopsis",level:3},{value:"Options",id:"options",level:3},{value:"SEE ALSO",id:"see-also",level:3}];function c(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"axoned-query-wasm-pinned",children:"axoned query wasm pinned"}),"\n",(0,s.jsx)(n.p,{children:"List all pinned code ids"}),"\n",(0,s.jsx)(n.h3,{id:"synopsis",children:"Synopsis"}),"\n",(0,s.jsx)(n.p,{children:"List all pinned code ids"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"axoned query wasm pinned [flags]\n"})}),"\n",(0,s.jsx)(n.h3,{id:"options",children:"Options"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for pinned\n      --limit uint         pagination limit of list codes to query for (default 100)\n      --node string        <host>:<port> to CometBFT RPC interface for this chain (default "tcp://localhost:26657")\n  -o, --output string      Output format (text|json) (default "text")\n      --page-key string    pagination page-key of list codes to query for\n      --reverse            results are sorted in descending order\n'})}),"\n",(0,s.jsx)(n.h3,{id:"see-also",children:"SEE ALSO"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/fr/commands/next/axoned_query_wasm",children:"axoned query wasm"}),"\t - Querying commands for the wasm module"]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>a,a:()=>i});var s=t(67294);const o={},r=s.createContext(o);function i(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);