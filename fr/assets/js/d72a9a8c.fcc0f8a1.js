"use strict";(self.webpackChunk_axone_docs=self.webpackChunk_axone_docs||[]).push([[39851],{48890:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>l,frontMatter:()=>s,metadata:()=>d,toc:()=>u});var o=i(85893),t=i(11151);const s={},r=void 0,d={id:"axoned_query_distribution_commission",title:"axoned_query_distribution_commission",description:"axoned query distribution commission",source:"@site/commands/axoned_query_distribution_commission.md",sourceDirName:".",slug:"/axoned_query_distribution_commission",permalink:"/fr/commands/next/axoned_query_distribution_commission",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"axoned_query_distribution",permalink:"/fr/commands/next/axoned_query_distribution"},next:{title:"axoned_query_distribution_community-pool",permalink:"/fr/commands/next/axoned_query_distribution_community-pool"}},a={},u=[{value:"axoned query distribution commission",id:"axoned-query-distribution-commission",level:2},{value:"Examples",id:"examples",level:3},{value:"Options",id:"options",level:3},{value:"SEE ALSO",id:"see-also",level:3}];function c(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"axoned-query-distribution-commission",children:"axoned query distribution commission"}),"\n",(0,o.jsx)(n.p,{children:"Query distribution validator commission"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"axoned query distribution commission [validator] [flags]\n"})}),"\n",(0,o.jsx)(n.h3,{id:"examples",children:"Examples"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"$ axoned query distribution commission [validator-address]\n"})}),"\n",(0,o.jsx)(n.h3,{id:"options",children:"Options"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for commission\n      --no-indent          Do not indent JSON output\n      --node string        <host>:<port> to CometBFT RPC interface for this chain (default "tcp://localhost:26657")\n  -o, --output string      Output format (text|json) (default "text")\n'})}),"\n",(0,o.jsx)(n.h3,{id:"see-also",children:"SEE ALSO"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"/fr/commands/next/axoned_query_distribution",children:"axoned query distribution"}),"\t - Querying commands for the distribution module"]}),"\n"]})]})}function l(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},11151:(e,n,i)=>{i.d(n,{Z:()=>d,a:()=>r});var o=i(67294);const t={},s=o.createContext(t);function r(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);