"use strict";(self.webpackChunk_axone_docs=self.webpackChunk_axone_docs||[]).push([[96825],{91464:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>d,default:()=>l,frontMatter:()=>a,metadata:()=>i,toc:()=>s});var r=t(85893),o=t(11151);const a={},d=void 0,i={id:"okp4d_query_upgrade_applied",title:"okp4d_query_upgrade_applied",description:"okp4d query upgrade applied",source:"@site/commands/okp4d_query_upgrade_applied.md",sourceDirName:".",slug:"/okp4d_query_upgrade_applied",permalink:"/fr/commands/next/okp4d_query_upgrade_applied",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"okp4d_query_upgrade",permalink:"/fr/commands/next/okp4d_query_upgrade"},next:{title:"okp4d_query_upgrade_authority",permalink:"/fr/commands/next/okp4d_query_upgrade_authority"}},p={},s=[{value:"okp4d query upgrade applied",id:"okp4d-query-upgrade-applied",level:2},{value:"Synopsis",id:"synopsis",level:3},{value:"Options",id:"options",level:3},{value:"SEE ALSO",id:"see-also",level:3}];function u(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"okp4d-query-upgrade-applied",children:"okp4d query upgrade applied"}),"\n",(0,r.jsx)(n.p,{children:"Query the block header for height at which a completed upgrade was applied"}),"\n",(0,r.jsx)(n.h3,{id:"synopsis",children:"Synopsis"}),"\n",(0,r.jsx)(n.p,{children:"If upgrade-name was previously executed on the chain, this returns the header for the block at which it was applied. This helps a client determine which binary was valid over a given range of blocks, as well as more context to understand past migrations."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"okp4d query upgrade applied [upgrade-name] [flags]\n"})}),"\n",(0,r.jsx)(n.h3,{id:"options",children:"Options"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for applied\n      --no-indent          Do not indent JSON output\n      --node string        <host>:<port> to CometBFT RPC interface for this chain (default "tcp://localhost:26657")\n  -o, --output string      Output format (text|json) (default "text")\n'})}),"\n",(0,r.jsx)(n.h3,{id:"see-also",children:"SEE ALSO"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/fr/commands/next/okp4d_query_upgrade",children:"okp4d query upgrade"}),"\t - Querying commands for the upgrade module"]}),"\n"]})]})}function l(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>i,a:()=>d});var r=t(67294);const o={},a=r.createContext(o);function d(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:d(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);