"use strict";(self.webpackChunk_axone_docs=self.webpackChunk_axone_docs||[]).push([[89152],{16911:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var r=t(85893),o=t(11151);const a={},i=void 0,s={id:"axoned_query_auth_bech32-prefix",title:"axoned_query_auth_bech32-prefix",description:"axoned query auth bech32-prefix",source:"@site/commands/axoned_query_auth_bech32-prefix.md",sourceDirName:".",slug:"/axoned_query_auth_bech32-prefix",permalink:"/fr/commands/next/axoned_query_auth_bech32-prefix",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"axoned_query_auth_address-string-to-bytes",permalink:"/fr/commands/next/axoned_query_auth_address-string-to-bytes"},next:{title:"axoned_query_auth_module-account",permalink:"/fr/commands/next/axoned_query_auth_module-account"}},u={},c=[{value:"axoned query auth bech32-prefix",id:"axoned-query-auth-bech32-prefix",level:2},{value:"Options",id:"options",level:3},{value:"SEE ALSO",id:"see-also",level:3}];function d(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"axoned-query-auth-bech32-prefix",children:"axoned query auth bech32-prefix"}),"\n",(0,r.jsx)(n.p,{children:"Query the chain bech32 prefix (if applicable)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"axoned query auth bech32-prefix [flags]\n"})}),"\n",(0,r.jsx)(n.h3,{id:"options",children:"Options"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for bech32-prefix\n      --no-indent          Do not indent JSON output\n      --node string        <host>:<port> to CometBFT RPC interface for this chain (default "tcp://localhost:26657")\n  -o, --output string      Output format (text|json) (default "text")\n'})}),"\n",(0,r.jsx)(n.h3,{id:"see-also",children:"SEE ALSO"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/fr/commands/next/axoned_query_auth",children:"axoned query auth"}),"\t - Querying commands for the auth module"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>s,a:()=>i});var r=t(67294);const o={},a=r.createContext(o);function i(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);