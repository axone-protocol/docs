"use strict";(self.webpackChunk_axone_docs=self.webpackChunk_axone_docs||[]).push([[18032],{76391:(e,n,d)=>{d.r(n),d.d(n,{assets:()=>a,contentTitle:()=>t,default:()=>l,frontMatter:()=>s,metadata:()=>i,toc:()=>c});var o=d(85893),r=d(11151);const s={},t=void 0,i={id:"okp4d_debug",title:"okp4d_debug",description:"okp4d debug",source:"@site/commands_versioned_docs/version-v7.0.0/okp4d_debug.md",sourceDirName:".",slug:"/okp4d_debug",permalink:"/fr/commands/v7.0.0/okp4d_debug",draft:!1,unlisted:!1,tags:[],version:"v7.0.0",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"okp4d_credential_sign",permalink:"/fr/commands/v7.0.0/okp4d_credential_sign"},next:{title:"okp4d_debug_addr",permalink:"/fr/commands/v7.0.0/okp4d_debug_addr"}},a={},c=[{value:"okp4d debug",id:"okp4d-debug",level:2},{value:"Options",id:"options",level:3},{value:"SEE ALSO",id:"see-also",level:3}];function p(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"okp4d-debug",children:"okp4d debug"}),"\n",(0,o.jsx)(n.p,{children:"Tool for helping with debugging your application"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"okp4d debug [flags]\n"})}),"\n",(0,o.jsx)(n.h3,{id:"options",children:"Options"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"  -h, --help   help for debug\n"})}),"\n",(0,o.jsx)(n.h3,{id:"see-also",children:"SEE ALSO"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"/fr/commands/next/okp4d",children:"okp4d"}),"\t - OKP4 Daemon \ud83d\udc79"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"/fr/commands/next/okp4d_debug_addr",children:"okp4d debug addr"}),"\t - Convert an address between hex and bech32"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"/fr/commands/next/okp4d_debug_prefixes",children:"okp4d debug prefixes"}),"\t - List prefixes used for Human-Readable Part (HRP) in Bech32"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"/fr/commands/next/okp4d_debug_pubkey",children:"okp4d debug pubkey"}),"\t - Decode a pubkey from proto JSON"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"/fr/commands/next/okp4d_debug_pubkey-raw",children:"okp4d debug pubkey-raw"}),"\t - Decode a ED25519 or secp256k1 pubkey from hex, base64, or bech32"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"/fr/commands/next/okp4d_debug_raw-bytes",children:"okp4d debug raw-bytes"}),"\t - Convert raw bytes output (eg. [10 21 13 255]) to hex"]}),"\n"]})]})}function l(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}},11151:(e,n,d)=>{d.d(n,{Z:()=>i,a:()=>t});var o=d(67294);const r={},s=o.createContext(r);function t(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);