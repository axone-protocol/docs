"use strict";(self.webpackChunk_axone_docs=self.webpackChunk_axone_docs||[]).push([[60433],{25055:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>a,toc:()=>d});var s=t(85893),o=t(11151);const r={sidebar_position:14},i="open/4",a={id:"open_4",title:"open_4",description:"[//]: # (This file is auto-generated. Please do not modify it yourself.)",source:"@site/predicates_versioned_docs/version-v7.0.0/open_4.md",sourceDirName:".",slug:"/open_4",permalink:"/predicates/v7.0.0/open_4",draft:!1,unlisted:!1,tags:[],version:"v7.0.0",sidebarPosition:14,frontMatter:{sidebar_position:14},sidebar:"defaultSidebar",previous:{title:"json_prolog_2",permalink:"/predicates/v7.0.0/json_prolog_2"},next:{title:"read_string_3",permalink:"/predicates/v7.0.0/read_string_3"}},c={},d=[{value:"Description",id:"description",level:2},{value:"Examples",id:"examples",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"open4",children:"open/4"}),"\n",(0,s.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"open/4"})," is a predicate that unify a stream with a source sink on a virtual file system."]}),"\n",(0,s.jsx)(n.p,{children:"The signature is as follows:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:"open(+SourceSink, +Mode, ?Stream, +Options)\n"})}),"\n",(0,s.jsx)(n.p,{children:"Where:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"SourceSink is an atom representing the source or sink of the stream. The atom typically represents a resource that can be opened, such as a URI. The URI scheme determines the type of resource that is opened."}),"\n",(0,s.jsx)(n.li,{children:"Mode is an atom representing the mode of the stream (read, write, append)."}),"\n",(0,s.jsx)(n.li,{children:"Stream is the stream to be opened."}),"\n",(0,s.jsx)(n.li,{children:"Options is a list of options. No options are currently defined, so the list should be empty."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:"# `open/4` a stream from a cosmwasm query.\n# The Stream should be read as a string with a read_string/3 predicate, and then closed with the close/1 predicate.\n- open('cosmwasm:okp4-objectarium:okp412kgx?query=%7B%22object_data%22%3A%7B%...4dd539e3%22%7D%7D', 'read', Stream, [])\n"})})]})}function p(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>a,a:()=>i});var s=t(67294);const o={},r=s.createContext(o);function i(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);