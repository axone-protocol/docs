"use strict";(self.webpackChunk_axone_docs=self.webpackChunk_axone_docs||[]).push([[50304],{89262:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>s,default:()=>h,frontMatter:()=>i,metadata:()=>u,toc:()=>c});var r=n(85893),o=n(11151);const i={},s=void 0,u={id:"okp4d_query_auth_bech32-prefix",title:"okp4d_query_auth_bech32-prefix",description:"okp4d query auth bech32-prefix",source:"@site/commands_versioned_docs/version-v6.0.0/okp4d_query_auth_bech32-prefix.md",sourceDirName:".",slug:"/okp4d_query_auth_bech32-prefix",permalink:"/commands/v6.0.0/okp4d_query_auth_bech32-prefix",draft:!1,unlisted:!1,tags:[],version:"v6.0.0",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"okp4d_query_auth_address-string-to-bytes",permalink:"/commands/v6.0.0/okp4d_query_auth_address-string-to-bytes"},next:{title:"okp4d_query_auth_module-account",permalink:"/commands/v6.0.0/okp4d_query_auth_module-account"}},a={},c=[{value:"okp4d query auth bech32-prefix",id:"okp4d-query-auth-bech32-prefix",level:2},{value:"Options",id:"options",level:3},{value:"SEE ALSO",id:"see-also",level:3}];function d(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h2,{id:"okp4d-query-auth-bech32-prefix",children:"okp4d query auth bech32-prefix"}),"\n",(0,r.jsx)(t.p,{children:"Query the chain bech32 prefix (if applicable)"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"okp4d query auth bech32-prefix [flags]\n"})}),"\n",(0,r.jsx)(t.h3,{id:"options",children:"Options"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:'      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for bech32-prefix\n      --no-indent          Do not indent JSON output\n      --node string        <host>:<port> to CometBFT RPC interface for this chain (default "tcp://localhost:26657")\n  -o, --output string      Output format (text|json) (default "text")\n'})}),"\n",(0,r.jsx)(t.h3,{id:"see-also",children:"SEE ALSO"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.a,{href:"/commands/next/okp4d_query_auth",children:"okp4d query auth"}),"\t - Querying commands for the auth module"]}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},11151:(e,t,n)=>{n.d(t,{Z:()=>u,a:()=>s});var r=n(67294);const o={},i=r.createContext(o);function s(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function u(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);