"use strict";(self.webpackChunk_axone_docs=self.webpackChunk_axone_docs||[]).push([[35956],{65163:(o,e,n)=>{n.r(e),n.d(e,{assets:()=>u,contentTitle:()=>p,default:()=>l,frontMatter:()=>t,metadata:()=>s,toc:()=>c});var r=n(85893),i=n(11151);const t={},p=void 0,s={id:"okp4d_query_group_group-policy-info",title:"okp4d_query_group_group-policy-info",description:"okp4d query group group-policy-info",source:"@site/commands_versioned_docs/version-v5.0.0/okp4d_query_group_group-policy-info.md",sourceDirName:".",slug:"/okp4d_query_group_group-policy-info",permalink:"/commands/v5.0.0/okp4d_query_group_group-policy-info",draft:!1,unlisted:!1,tags:[],version:"v5.0.0",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"okp4d_query_group_group-policies-by-group",permalink:"/commands/v5.0.0/okp4d_query_group_group-policies-by-group"},next:{title:"okp4d_query_group_groups-by-admin",permalink:"/commands/v5.0.0/okp4d_query_group_groups-by-admin"}},u={},c=[{value:"okp4d query group group-policy-info",id:"okp4d-query-group-group-policy-info",level:2},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3}];function d(o){const e={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.a)(),...o.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h2,{id:"okp4d-query-group-group-policy-info",children:"okp4d query group group-policy-info"}),"\n",(0,r.jsx)(e.p,{children:"Query for group policy info by account address of group policy"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:"okp4d query group group-policy-info [group-policy-account] [flags]\n"})}),"\n",(0,r.jsx)(e.h3,{id:"options",children:"Options"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:'      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for group-policy-info\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")\n  -o, --output string      Output format (text|json) (default "text")\n'})}),"\n",(0,r.jsx)(e.h3,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:'      --chain-id string   The network chain ID (default "okp4d")\n'})}),"\n",(0,r.jsx)(e.h3,{id:"see-also",children:"SEE ALSO"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.a,{href:"/commands/v5.0.0/okp4d_query_group",children:"okp4d query group"}),"\t - Querying commands for the group module"]}),"\n"]})]})}function l(o={}){const{wrapper:e}={...(0,i.a)(),...o.components};return e?(0,r.jsx)(e,{...o,children:(0,r.jsx)(d,{...o})}):d(o)}},11151:(o,e,n)=>{n.d(e,{Z:()=>s,a:()=>p});var r=n(67294);const i={},t=r.createContext(i);function p(o){const e=r.useContext(t);return r.useMemo((function(){return"function"==typeof o?o(e):{...e,...o}}),[e,o])}function s(o){let e;return e=o.disableParentContext?"function"==typeof o.components?o.components(i):o.components||i:p(o.components),r.createElement(t.Provider,{value:e},o.children)}}}]);