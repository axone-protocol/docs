"use strict";(self.webpackChunk_axone_docs=self.webpackChunk_axone_docs||[]).push([[96830],{68430:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>c,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var a=t(85893),s=t(11151);const o={},c=void 0,i={id:"axoned_query_ibc_channel_channels",title:"axoned_query_ibc_channel_channels",description:"axoned query ibc channel channels",source:"@site/commands/axoned_query_ibc_channel_channels.md",sourceDirName:".",slug:"/axoned_query_ibc_channel_channels",permalink:"/commands/next/axoned_query_ibc_channel_channels",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"axoned_query_ibc_channel",permalink:"/commands/next/axoned_query_ibc_channel"},next:{title:"axoned_query_ibc_channel_client-state",permalink:"/commands/next/axoned_query_ibc_channel_client-state"}},r={},l=[{value:"axoned query ibc channel channels",id:"axoned-query-ibc-channel-channels",level:2},{value:"Synopsis",id:"synopsis",level:3},{value:"Examples",id:"examples",level:3},{value:"Options",id:"options",level:3},{value:"SEE ALSO",id:"see-also",level:3}];function h(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"axoned-query-ibc-channel-channels",children:"axoned query ibc channel channels"}),"\n",(0,a.jsx)(n.p,{children:"Query all channels"}),"\n",(0,a.jsx)(n.h3,{id:"synopsis",children:"Synopsis"}),"\n",(0,a.jsx)(n.p,{children:"Query all channels from a chain"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"axoned query ibc channel channels [flags]\n"})}),"\n",(0,a.jsx)(n.h3,{id:"examples",children:"Examples"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"axoned query ibc channel channels\n"})}),"\n",(0,a.jsx)(n.h3,{id:"options",children:"Options"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:'      --count-total        count total number of records in channels to query for\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for channels\n      --limit uint         pagination limit of channels to query for (default 100)\n      --node string        <host>:<port> to CometBFT RPC interface for this chain (default "tcp://localhost:26657")\n      --offset uint        pagination offset of channels to query for\n  -o, --output string      Output format (text|json) (default "text")\n      --page uint          pagination page of channels to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string    pagination page-key of channels to query for\n      --reverse            results are sorted in descending order\n'})}),"\n",(0,a.jsx)(n.h3,{id:"see-also",children:"SEE ALSO"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"/commands/next/axoned_query_ibc_channel",children:"axoned query ibc channel"}),"\t - IBC channel query subcommands"]}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>i,a:()=>c});var a=t(67294);const s={},o=a.createContext(s);function c(e){const n=a.useContext(o);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),a.createElement(o.Provider,{value:n},e.children)}}}]);