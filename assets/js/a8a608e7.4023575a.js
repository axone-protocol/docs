"use strict";(self.webpackChunk_okp4_docs=self.webpackChunk_okp4_docs||[]).push([[77756],{13793:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>r});var i=t(85893),c=t(11151);const s={},o=void 0,a={id:"okp4d_query_ibc_channel_client-state",title:"okp4d_query_ibc_channel_client-state",description:"okp4d query ibc channel client-state",source:"@site/commands_versioned_docs/version-v7.0.0/okp4d_query_ibc_channel_client-state.md",sourceDirName:".",slug:"/okp4d_query_ibc_channel_client-state",permalink:"/commands/v7.0.0/okp4d_query_ibc_channel_client-state",draft:!1,unlisted:!1,tags:[],version:"v7.0.0",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"okp4d_query_ibc_channel_channels",permalink:"/commands/v7.0.0/okp4d_query_ibc_channel_channels"},next:{title:"okp4d_query_ibc_channel_connections",permalink:"/commands/v7.0.0/okp4d_query_ibc_channel_connections"}},l={},r=[{value:"okp4d query ibc channel client-state",id:"okp4d-query-ibc-channel-client-state",level:2},{value:"Synopsis",id:"synopsis",level:3},{value:"Examples",id:"examples",level:3},{value:"Options",id:"options",level:3},{value:"SEE ALSO",id:"see-also",level:3}];function d(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,c.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"okp4d-query-ibc-channel-client-state",children:"okp4d query ibc channel client-state"}),"\n",(0,i.jsx)(n.p,{children:"Query the client state associated with a channel"}),"\n",(0,i.jsx)(n.h3,{id:"synopsis",children:"Synopsis"}),"\n",(0,i.jsx)(n.p,{children:"Query the client state associated with a channel, by providing its port and channel identifiers."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"okp4d query ibc channel client-state [port-id] [channel-id] [flags]\n"})}),"\n",(0,i.jsx)(n.h3,{id:"examples",children:"Examples"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"okp4d query ibc channel client-state [port-id] [channel-id]\n"})}),"\n",(0,i.jsx)(n.h3,{id:"options",children:"Options"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for client-state\n      --node string        <host>:<port> to CometBFT RPC interface for this chain (default "tcp://localhost:26657")\n  -o, --output string      Output format (text|json) (default "text")\n'})}),"\n",(0,i.jsx)(n.h3,{id:"see-also",children:"SEE ALSO"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/commands/next/okp4d_query_ibc_channel",children:"okp4d query ibc channel"}),"\t - IBC channel query subcommands"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,c.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>a,a:()=>o});var i=t(67294);const c={},s=i.createContext(c);function o(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:o(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);