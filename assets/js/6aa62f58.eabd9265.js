"use strict";(self.webpackChunk_axone_docs=self.webpackChunk_axone_docs||[]).push([[57086],{75714:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>h,contentTitle:()=>d,default:()=>x,frontMatter:()=>n,metadata:()=>l,toc:()=>c});var i=s(85893),t=s(11151);const n={},d="Cognitarium",l={id:"okp4-cognitarium",title:"Cognitarium",description:"Overview",source:"@site/contracts_versioned_docs/version-v3.0.0/okp4-cognitarium.md",sourceDirName:".",slug:"/okp4-cognitarium",permalink:"/contracts/v3.0.0/okp4-cognitarium",draft:!1,unlisted:!1,tags:[],version:"v3.0.0",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"OKP4 Contracts v3.0.0 API Reference",permalink:"/contracts/v3.0.0/"},next:{title:"Law Stone",permalink:"/contracts/v3.0.0/okp4-law-stone"}},h={},c=[{value:"Overview",id:"overview",level:2},{value:"InstantiateMsg",id:"instantiatemsg",level:2},{value:"ExecuteMsg",id:"executemsg",level:2},{value:"ExecuteMsg::InsertData",id:"executemsginsertdata",level:3},{value:"ExecuteMsg::DeleteData",id:"executemsgdeletedata",level:3},{value:"QueryMsg",id:"querymsg",level:2},{value:"QueryMsg::Store",id:"querymsgstore",level:3},{value:"QueryMsg::Select",id:"querymsgselect",level:3},{value:"QueryMsg::Describe",id:"querymsgdescribe",level:3},{value:"QueryMsg::Construct",id:"querymsgconstruct",level:3},{value:"Responses",id:"responses",level:2},{value:"construct",id:"construct",level:3},{value:"describe",id:"describe",level:3},{value:"select",id:"select",level:3},{value:"store",id:"store",level:3},{value:"Definitions",id:"definitions",level:2},{value:"Binary",id:"binary",level:3},{value:"BlankNode",id:"blanknode",level:3},{value:"ConstructQuery",id:"constructquery",level:3},{value:"DataFormat",id:"dataformat",level:3},{value:"DescribeQuery",id:"describequery",level:3},{value:"Full",id:"full",level:3},{value:"Head",id:"head",level:3},{value:"IRI",id:"iri",level:3},{value:"LanguageTaggedString",id:"languagetaggedstring",level:3},{value:"Literal",id:"literal",level:3},{value:"N-Quads",id:"n-quads",level:3},{value:"N-Triples",id:"n-triples",level:3},{value:"NamedNode",id:"namednode",level:3},{value:"Node",id:"node",level:3},{value:"Prefix",id:"prefix",level:3},{value:"Prefixed",id:"prefixed",level:3},{value:"RDF XML",id:"rdf-xml",level:3},{value:"Results",id:"results",level:3},{value:"SelectItem",id:"selectitem",level:3},{value:"SelectQuery",id:"selectquery",level:3},{value:"Simple",id:"simple",level:3},{value:"SimpleWhereCondition",id:"simplewherecondition",level:3},{value:"StoreLimits",id:"storelimits",level:3},{value:"StoreLimitsInput",id:"storelimitsinput",level:3},{value:"StoreStat",id:"storestat",level:3},{value:"TriplePattern",id:"triplepattern",level:3},{value:"Turtle",id:"turtle",level:3},{value:"TypedValue",id:"typedvalue",level:3},{value:"URI",id:"uri",level:3},{value:"Uint128",id:"uint128",level:3},{value:"Value",id:"value",level:3},{value:"VarOrNamedNode",id:"varornamednode",level:3},{value:"VarOrNode",id:"varornode",level:3},{value:"VarOrNodeOrLiteral",id:"varornodeorliteral",level:3},{value:"Variable",id:"variable",level:3},{value:"WhereCondition",id:"wherecondition",level:3}];function a(e){const r={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",hr:"hr",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.h1,{id:"cognitarium",children:"Cognitarium"}),"\n",(0,i.jsx)(r.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsxs)(r.p,{children:["The ",(0,i.jsx)(r.code,{children:"okp4-cognitarium"})," smart contract enables the storage of ",(0,i.jsx)(r.a,{href:"https://en.wikipedia.org/wiki/Semantic_triple",children:"RDF graphs triples"})," (i.e. ",(0,i.jsx)(r.code,{children:"subject"}),"-",(0,i.jsx)(r.code,{children:"predicate"}),"-",(0,i.jsx)(r.code,{children:"object"}),") in any ",(0,i.jsx)(r.a,{href:"https://cosmos.network/",children:"Cosmos blockchains"})," using the ",(0,i.jsx)(r.a,{href:"https://cosmwasm.com/",children:"CosmWasm"})," framework."]}),"\n",(0,i.jsxs)(r.p,{children:["\u27a1\ufe0f Checkout the ",(0,i.jsx)(r.a,{href:"https://github.com/okp4/contracts/tree/main/contracts/okp4-cognitarium/examples/",children:"examples"})," for usage information."]}),"\n",(0,i.jsx)(r.h2,{id:"instantiatemsg",children:"InstantiateMsg"}),"\n",(0,i.jsx)(r.p,{children:"Instantiate message"}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"parameter"}),(0,i.jsx)(r.th,{children:"description"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"limits"})}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#storelimitsinput",children:"StoreLimitsInput"})}),". Limitations regarding store usage."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"limits.max_byte_size"})}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#uint128",children:"Uint128"})}),". The maximum number of bytes the store can contain. The size of a triple is counted as the sum of the size of its subject, predicate and object, including the size of data types and language tags if any. Default to [Uint128::MAX] if not set, which can be considered as no limit.",(0,i.jsx)("br",{}),(0,i.jsx)(r.strong,{children:"Default:"})," ",(0,i.jsx)(r.code,{children:'"340282366920938463463374607431768211455"'})]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"limits.max_insert_data_byte_size"})}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#uint128",children:"Uint128"})}),". The maximum number of bytes an insert data query can contain. Default to [Uint128::MAX] if not set, which can be considered as no limit.",(0,i.jsx)("br",{}),(0,i.jsx)(r.strong,{children:"Default:"})," ",(0,i.jsx)(r.code,{children:'"340282366920938463463374607431768211455"'})]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"limits.max_insert_data_triple_count"})}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#uint128",children:"Uint128"})}),". The maximum number of triples an insert data query can contain (after parsing). Default to [Uint128::MAX] if not set, which can be considered as no limit.",(0,i.jsx)("br",{}),(0,i.jsx)(r.strong,{children:"Default:"})," ",(0,i.jsx)(r.code,{children:'"340282366920938463463374607431768211455"'})]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"limits.max_query_limit"})}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:"integer"}),". The maximum limit of a query, i.e. the maximum number of triples returned by a select query. Default to 30 if not set.",(0,i.jsx)("br",{}),(0,i.jsx)(r.strong,{children:"Default:"})," ",(0,i.jsx)(r.code,{children:"30"})]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"limits.max_query_variable_count"})}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:"integer"}),". The maximum number of variables a query can select. Default to 30 if not set.",(0,i.jsx)("br",{}),(0,i.jsx)(r.strong,{children:"Default:"})," ",(0,i.jsx)(r.code,{children:"30"})]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"limits.max_triple_byte_size"})}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#uint128",children:"Uint128"})}),". The maximum number of bytes the store can contain for a single triple. The size of a triple is counted as the sum of the size of its subject, predicate and object, including the size of data types and language tags if any. The limit is used to prevent storing very large triples, especially literals. Default to [Uint128::MAX] if not set, which can be considered as no limit.",(0,i.jsx)("br",{}),(0,i.jsx)(r.strong,{children:"Default:"})," ",(0,i.jsx)(r.code,{children:'"340282366920938463463374607431768211455"'})]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"limits.max_triple_count"})}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#uint128",children:"Uint128"})}),". The maximum number of triples the store can contain. Default to [Uint128::MAX] if not set, which can be considered as no limit.",(0,i.jsx)("br",{}),(0,i.jsx)(r.strong,{children:"Default:"})," ",(0,i.jsx)(r.code,{children:'"340282366920938463463374607431768211455"'})]})]})]})]}),"\n",(0,i.jsx)(r.h2,{id:"executemsg",children:"ExecuteMsg"}),"\n",(0,i.jsx)(r.p,{children:"Execute messages"}),"\n",(0,i.jsx)(r.h3,{id:"executemsginsertdata",children:"ExecuteMsg::InsertData"}),"\n",(0,i.jsx)(r.p,{children:"Insert the data as RDF triples in the store. For already existing triples it acts as no-op."}),"\n",(0,i.jsx)(r.p,{children:"Only the smart contract owner (i.e. the address who instantiated it) is authorized to perform this action."}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"parameter"}),(0,i.jsx)(r.th,{children:"description"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"insert_data"})}),(0,i.jsxs)(r.td,{children:["*(Required.) * ",(0,i.jsx)(r.strong,{children:"object"}),"."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"insert_data.data"})}),(0,i.jsxs)(r.td,{children:["*(Required.) * ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#binary",children:"Binary"})}),". The data to insert. The data must be serialized in the format specified by the ",(0,i.jsx)(r.code,{children:"format"})," field. And the data are subject to the limitations defined by the ",(0,i.jsx)(r.code,{children:"limits"})," specified at contract instantiation."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"insert_data.format"})}),(0,i.jsxs)(r.td,{children:[(0,i.jsxs)(r.strong,{children:[(0,i.jsx)(r.a,{href:"#dataformat",children:"DataFormat"}),"|null"]}),". The data format in which the triples are serialized. If not provided, the default format is ",(0,i.jsx)(r.a,{href:"https://www.w3.org/TR/turtle/",children:"Turtle"})," format."]})]})]})]}),"\n",(0,i.jsx)(r.h3,{id:"executemsgdeletedata",children:"ExecuteMsg::DeleteData"}),"\n",(0,i.jsx)(r.p,{children:"Delete the data (RDF triples) from the store matching the patterns defined by the provided query. For non-existing triples it acts as no-op."}),"\n",(0,i.jsxs)(r.p,{children:["Example: ",(0,i.jsx)(r.code,{children:'json { "prefixes": [ { "prefix": "foaf", "namespace": "http://xmlns.com/foaf/0.1/" } ], "delete": [ { "subject": { "variable": "s" }, "predicate": { "variable": "p" }, "object": { "variable": "o" } } ], "where": [ { "simple": { "triplePattern": { "subject": { "variable": "s" }, "predicate": { "node": { "namedNode": {"prefixed": "foaf:givenName"} } }, "object": { "literal": { "simple": "Myrddin" } } } } }, { "simple": { "triplePattern": { "subject": { "variable": "s" }, "predicate": { "variable": "p" }, "object": { "variable": "o" } } } } ] '})]}),"\n",(0,i.jsx)(r.p,{children:"Only the smart contract owner (i.e. the address who instantiated it) is authorized to perform this action."}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"parameter"}),(0,i.jsx)(r.th,{children:"description"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"delete_data"})}),(0,i.jsxs)(r.td,{children:["*(Required.) * ",(0,i.jsx)(r.strong,{children:"object"}),"."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"delete_data.delete"})}),(0,i.jsxs)(r.td,{children:["*(Required.) * ",(0,i.jsxs)(r.strong,{children:["Array<",(0,i.jsx)(r.a,{href:"#triplepattern",children:"TriplePattern"}),">"]}),". Specifies the specific triple patterns to delete. If nothing is provided, the patterns from the ",(0,i.jsx)(r.code,{children:"where"})," clause are used for deletion."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"delete_data.prefixes"})}),(0,i.jsxs)(r.td,{children:["*(Required.) * ",(0,i.jsxs)(r.strong,{children:["Array<",(0,i.jsx)(r.a,{href:"#prefix",children:"Prefix"}),">"]}),". The prefixes used in the operation."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"delete_data.where"})}),(0,i.jsxs)(r.td,{children:["*(Required.) * ",(0,i.jsxs)(r.strong,{children:["Array<",(0,i.jsx)(r.a,{href:"#wherecondition",children:"WhereCondition"}),">"]}),". Defines the patterns that data (RDF triples) should match in order for it to be considered for deletion."]})]})]})]}),"\n",(0,i.jsx)(r.h2,{id:"querymsg",children:"QueryMsg"}),"\n",(0,i.jsx)(r.p,{children:"Query messages"}),"\n",(0,i.jsx)(r.h3,{id:"querymsgstore",children:"QueryMsg::Store"}),"\n",(0,i.jsx)(r.p,{children:"Returns information about the triple store."}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsx)(r.tr,{children:(0,i.jsx)(r.th,{children:"literal"})})}),(0,i.jsx)(r.tbody,{children:(0,i.jsx)(r.tr,{children:(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:'"store"'})})})})]}),"\n",(0,i.jsx)(r.h3,{id:"querymsgselect",children:"QueryMsg::Select"}),"\n",(0,i.jsx)(r.p,{children:"Returns the resources matching the criteria defined by the provided query."}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"parameter"}),(0,i.jsx)(r.th,{children:"description"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"select"})}),(0,i.jsxs)(r.td,{children:["*(Required.) * ",(0,i.jsx)(r.strong,{children:"object"}),"."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"select.query"})}),(0,i.jsxs)(r.td,{children:["*(Required.) * ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#selectquery",children:"SelectQuery"})}),". The query to execute."]})]})]})]}),"\n",(0,i.jsx)(r.h3,{id:"querymsgdescribe",children:"QueryMsg::Describe"}),"\n",(0,i.jsx)(r.p,{children:"Returns a description of the resource identified by the provided IRI as a set of RDF triples serialized in the provided format."}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"parameter"}),(0,i.jsx)(r.th,{children:"description"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"describe"})}),(0,i.jsxs)(r.td,{children:["*(Required.) * ",(0,i.jsx)(r.strong,{children:"object"}),"."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"describe.format"})}),(0,i.jsxs)(r.td,{children:[(0,i.jsxs)(r.strong,{children:[(0,i.jsx)(r.a,{href:"#dataformat",children:"DataFormat"}),"|null"]}),". The format in which the triples are serialized. If not provided, the default format is ",(0,i.jsx)(r.a,{href:"https://www.w3.org/TR/turtle/",children:"Turtle"})," format."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"describe.query"})}),(0,i.jsxs)(r.td,{children:["*(Required.) * ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#describequery",children:"DescribeQuery"})}),". The query to execute."]})]})]})]}),"\n",(0,i.jsx)(r.h3,{id:"querymsgconstruct",children:"QueryMsg::Construct"}),"\n",(0,i.jsx)(r.p,{children:"Returns the resources matching the criteria defined by the provided query as a set of RDF triples serialized in the provided format."}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"parameter"}),(0,i.jsx)(r.th,{children:"description"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"construct"})}),(0,i.jsxs)(r.td,{children:["*(Required.) * ",(0,i.jsx)(r.strong,{children:"object"}),"."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"construct.format"})}),(0,i.jsxs)(r.td,{children:[(0,i.jsxs)(r.strong,{children:[(0,i.jsx)(r.a,{href:"#dataformat",children:"DataFormat"}),"|null"]}),". The format in which the triples are serialized. If not provided, the default format is ",(0,i.jsx)(r.a,{href:"https://www.w3.org/TR/turtle/",children:"Turtle"})," format."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"construct.query"})}),(0,i.jsxs)(r.td,{children:["*(Required.) * ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#constructquery",children:"ConstructQuery"})}),". The query to execute."]})]})]})]}),"\n",(0,i.jsx)(r.h2,{id:"responses",children:"Responses"}),"\n",(0,i.jsx)(r.h3,{id:"construct",children:"construct"}),"\n",(0,i.jsx)(r.p,{children:"Represents the response of a [QueryMsg::Construct] query."}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"property"}),(0,i.jsx)(r.th,{children:"description"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"data"})}),(0,i.jsxs)(r.td,{children:["*(Required.) * ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#binary",children:"Binary"})}),". The data serialized in the specified format."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"format"})}),(0,i.jsxs)(r.td,{children:["*(Required.) * ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#dataformat",children:"DataFormat"})}),". The format of the data."]})]})]})]}),"\n",(0,i.jsx)(r.h3,{id:"describe",children:"describe"}),"\n",(0,i.jsx)(r.p,{children:"Represents the response of a [QueryMsg::Describe] query."}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"property"}),(0,i.jsx)(r.th,{children:"description"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"data"})}),(0,i.jsxs)(r.td,{children:["*(Required.) * ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#binary",children:"Binary"})}),". The data serialized in the specified format."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"format"})}),(0,i.jsxs)(r.td,{children:["*(Required.) * ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#dataformat",children:"DataFormat"})}),". The format of the data."]})]})]})]}),"\n",(0,i.jsx)(r.h3,{id:"select",children:"select"}),"\n",(0,i.jsx)(r.p,{children:"Represents the response of a [QueryMsg::Select] query."}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"property"}),(0,i.jsx)(r.th,{children:"description"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"head"})}),(0,i.jsxs)(r.td,{children:["*(Required.) * ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#head",children:"Head"})}),". The head of the response, i.e. the set of variables mentioned in the results."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"head.vars"})}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:"Array<string>"}),". The variables selected in the query."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"results"})}),(0,i.jsxs)(r.td,{children:["*(Required.) * ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#results",children:"Results"})}),". The results of the select query."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"results.bindings"})}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:"Array<object>"}),". The bindings of the results."]})]})]})]}),"\n",(0,i.jsx)(r.h3,{id:"store",children:"store"}),"\n",(0,i.jsx)(r.p,{children:"Contains information related to triple store."}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"property"}),(0,i.jsx)(r.th,{children:"description"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"limits"})}),(0,i.jsxs)(r.td,{children:["*(Required.) * ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#storelimits",children:"StoreLimits"})}),". The store limits."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"limits.max_byte_size"})}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#uint128",children:"Uint128"})}),". The maximum number of bytes the store can contain. The size of a triple is counted as the sum of the size of its subject, predicate and object, including the size of data types and language tags if any."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"limits.max_insert_data_byte_size"})}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#uint128",children:"Uint128"})}),". The maximum number of bytes an insert data query can contain."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"limits.max_insert_data_triple_count"})}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#uint128",children:"Uint128"})}),". The maximum number of triples an insert data query can contain (after parsing)."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"limits.max_query_limit"})}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:"integer"}),". The maximum limit of a query, i.e. the maximum number of triples returned by a select query."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"limits.max_query_variable_count"})}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:"integer"}),". The maximum number of variables a query can select."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"limits.max_triple_byte_size"})}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#uint128",children:"Uint128"})}),". The maximum number of bytes the store can contain for a single triple. The size of a triple is counted as the sum of the size of its subject, predicate and object, including the size of data types and language tags if any. The limit is used to prevent storing very large triples, especially literals."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"limits.max_triple_count"})}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#uint128",children:"Uint128"})}),". The maximum number of triples the store can contain."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"owner"})}),(0,i.jsxs)(r.td,{children:["*(Required.) * ",(0,i.jsx)(r.strong,{children:"string"}),". The store owner."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"stat"})}),(0,i.jsxs)(r.td,{children:["*(Required.) * ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#storestat",children:"StoreStat"})}),". The store current usage."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"stat.byte_size"})}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#uint128",children:"Uint128"})}),". The total triple size in the store, in bytes."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"stat.namespace_count"})}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#uint128",children:"Uint128"})}),". The total number of IRI namespace present in the store."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"stat.triple_count"})}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#uint128",children:"Uint128"})}),". The total number of triple present in the store."]})]})]})]}),"\n",(0,i.jsx)(r.h2,{id:"definitions",children:"Definitions"}),"\n",(0,i.jsx)(r.h3,{id:"binary",children:"Binary"}),"\n",(0,i.jsx)(r.p,{children:"A string containing Base64-encoded data."}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsx)(r.tr,{children:(0,i.jsx)(r.th,{children:"type"})})}),(0,i.jsx)(r.tbody,{children:(0,i.jsx)(r.tr,{children:(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:"string"}),"."]})})})]}),"\n",(0,i.jsx)(r.h3,{id:"blanknode",children:"BlankNode"}),"\n",(0,i.jsxs)(r.p,{children:["An RDF ",(0,i.jsx)(r.a,{href:"https://www.w3.org/TR/rdf11-concepts/#dfn-blank-node",children:"blank node"}),"."]}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"property"}),(0,i.jsx)(r.th,{children:"description"})]})}),(0,i.jsx)(r.tbody,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"blank_node"})}),(0,i.jsxs)(r.td,{children:["*(Required.) * ",(0,i.jsx)(r.strong,{children:"string"}),"."]})]})})]}),"\n",(0,i.jsx)(r.h3,{id:"constructquery",children:"ConstructQuery"}),"\n",(0,i.jsx)(r.p,{children:"Represents a CONSTRUCT query over the triple store, allowing to retrieve a set of triples serialized in a specific format."}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"property"}),(0,i.jsx)(r.th,{children:"description"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"construct"})}),(0,i.jsxs)(r.td,{children:["*(Required.) * ",(0,i.jsxs)(r.strong,{children:["Array<",(0,i.jsx)(r.a,{href:"#triplepattern",children:"TriplePattern"}),">"]}),". The triples to construct. If nothing is provided, the patterns from the ",(0,i.jsx)(r.code,{children:"where"})," clause are used for construction."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"prefixes"})}),(0,i.jsxs)(r.td,{children:["*(Required.) * ",(0,i.jsxs)(r.strong,{children:["Array<",(0,i.jsx)(r.a,{href:"#prefix",children:"Prefix"}),">"]}),". The prefixes used in the query."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"where"})}),(0,i.jsxs)(r.td,{children:["*(Required.) * ",(0,i.jsxs)(r.strong,{children:["Array<",(0,i.jsx)(r.a,{href:"#wherecondition",children:"WhereCondition"}),">"]}),". The WHERE clause. This clause is used to specify the triples to construct using variable bindings."]})]})]})]}),"\n",(0,i.jsx)(r.h3,{id:"dataformat",children:"DataFormat"}),"\n",(0,i.jsx)(r.p,{children:"Represents the format in which the data are serialized, for example when returned by a query or when inserted in the store."}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"variant"}),(0,i.jsx)(r.th,{children:"description"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"#rdf-xml",children:"RDF XML"})}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:"string"}),": ",(0,i.jsx)(r.code,{children:"rdf_xml"}),". Output in ",(0,i.jsx)(r.a,{href:"https://www.w3.org/TR/rdf-syntax-grammar/",children:"RDF/XML"})," format."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"#turtle",children:"Turtle"})}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:"string"}),": ",(0,i.jsx)(r.code,{children:"turtle"}),". Output in ",(0,i.jsx)(r.a,{href:"https://www.w3.org/TR/turtle/",children:"Turtle"})," format."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"#n-triples",children:"N-Triples"})}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:"string"}),": ",(0,i.jsx)(r.code,{children:"n_triples"}),". Output in ",(0,i.jsx)(r.a,{href:"https://www.w3.org/TR/n-triples/",children:"N-Triples"})," format."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"#n-quads",children:"N-Quads"})}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:"string"}),": ",(0,i.jsx)(r.code,{children:"n_quads"}),". Output in ",(0,i.jsx)(r.a,{href:"https://www.w3.org/TR/n-quads/",children:"N-Quads"})," format."]})]})]})]}),"\n",(0,i.jsx)(r.h3,{id:"describequery",children:"DescribeQuery"}),"\n",(0,i.jsx)(r.p,{children:"Represents a DESCRIBE query over the triple store, allowing to retrieve a description of a resource as a set of triples serialized in a specific format."}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"property"}),(0,i.jsx)(r.th,{children:"description"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"prefixes"})}),(0,i.jsxs)(r.td,{children:["*(Required.) * ",(0,i.jsxs)(r.strong,{children:["Array<",(0,i.jsx)(r.a,{href:"#prefix",children:"Prefix"}),">"]}),". The prefixes used in the query."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"resource"})}),(0,i.jsxs)(r.td,{children:["*(Required.) * ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#varornamednode",children:"VarOrNamedNode"})}),". The resource to describe given as a variable or a node."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"where"})}),(0,i.jsxs)(r.td,{children:["*(Required.) * ",(0,i.jsxs)(r.strong,{children:["Array<",(0,i.jsx)(r.a,{href:"#wherecondition",children:"WhereCondition"}),">"]}),". The WHERE clause. This clause is used to specify the resource identifier to describe using variable bindings."]})]})]})]}),"\n",(0,i.jsx)(r.h3,{id:"full",children:"Full"}),"\n",(0,i.jsx)(r.p,{children:"A full IRI."}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"property"}),(0,i.jsx)(r.th,{children:"description"})]})}),(0,i.jsx)(r.tbody,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"full"})}),(0,i.jsxs)(r.td,{children:["*(Required.) * ",(0,i.jsx)(r.strong,{children:"string"}),"."]})]})})]}),"\n",(0,i.jsx)(r.h3,{id:"head",children:"Head"}),"\n",(0,i.jsx)(r.p,{children:"Represents the head of a [SelectResponse]."}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"property"}),(0,i.jsx)(r.th,{children:"description"})]})}),(0,i.jsx)(r.tbody,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"vars"})}),(0,i.jsxs)(r.td,{children:["*(Required.) * ",(0,i.jsx)(r.strong,{children:"Array<string>"}),". The variables selected in the query."]})]})})]}),"\n",(0,i.jsx)(r.h3,{id:"iri",children:"IRI"}),"\n",(0,i.jsx)(r.p,{children:"Represents an IRI."}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"variant"}),(0,i.jsx)(r.th,{children:"description"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"#prefixed",children:"Prefixed"})}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:"object"}),". An IRI prefixed with a prefix. The prefixed IRI is expanded to a full IRI using the prefix definition specified in the query. For example, the prefixed IRI ",(0,i.jsx)(r.code,{children:"rdf:type"})," is expanded to ",(0,i.jsx)(r.code,{children:"http://www.w3.org/1999/02/22-rdf-syntax-ns#type"}),"."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"#full",children:"Full"})}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:"object"}),". A full IRI."]})]})]})]}),"\n",(0,i.jsx)(r.h3,{id:"languagetaggedstring",children:"LanguageTaggedString"}),"\n",(0,i.jsxs)(r.p,{children:["A ",(0,i.jsx)(r.a,{href:"https://www.w3.org/TR/rdf11-concepts/#dfn-language-tagged-string",children:"language-tagged string"})]}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"property"}),(0,i.jsx)(r.th,{children:"description"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"language_tagged_string"})}),(0,i.jsxs)(r.td,{children:["*(Required.) * ",(0,i.jsx)(r.strong,{children:"object"}),"."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"language_tagged_string.language"})}),(0,i.jsxs)(r.td,{children:["*(Required.) * ",(0,i.jsx)(r.strong,{children:"string"}),". The ",(0,i.jsx)(r.a,{href:"https://www.w3.org/TR/rdf11-concepts/#dfn-language-tag",children:"language tag"}),"."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"language_tagged_string.value"})}),(0,i.jsxs)(r.td,{children:["*(Required.) * ",(0,i.jsx)(r.strong,{children:"string"}),". The ",(0,i.jsx)(r.a,{href:"https://www.w3.org/TR/rdf11-concepts/#dfn-lexical-form",children:"lexical form"}),"."]})]})]})]}),"\n",(0,i.jsx)(r.h3,{id:"literal",children:"Literal"}),"\n",(0,i.jsxs)(r.p,{children:["An RDF ",(0,i.jsx)(r.a,{href:"https://www.w3.org/TR/rdf11-concepts/#dfn-literal",children:"literal"}),"."]}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"variant"}),(0,i.jsx)(r.th,{children:"description"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"#simple",children:"Simple"})}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:"object"}),". A ",(0,i.jsx)(r.a,{href:"https://www.w3.org/TR/rdf11-concepts/#dfn-simple-literal",children:"simple literal"})," without datatype or language form."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"#languagetaggedstring",children:"LanguageTaggedString"})}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:"object"}),". A ",(0,i.jsx)(r.a,{href:"https://www.w3.org/TR/rdf11-concepts/#dfn-language-tagged-string",children:"language-tagged string"})]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"#typedvalue",children:"TypedValue"})}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:"object"}),". A value with a datatype."]})]})]})]}),"\n",(0,i.jsx)(r.h3,{id:"n-quads",children:"N-Quads"}),"\n",(0,i.jsxs)(r.p,{children:["Output in ",(0,i.jsx)(r.a,{href:"https://www.w3.org/TR/n-quads/",children:"N-Quads"})," format."]}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsx)(r.tr,{children:(0,i.jsx)(r.th,{children:"literal"})})}),(0,i.jsx)(r.tbody,{children:(0,i.jsx)(r.tr,{children:(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:'"n_quads"'})})})})]}),"\n",(0,i.jsx)(r.h3,{id:"n-triples",children:"N-Triples"}),"\n",(0,i.jsxs)(r.p,{children:["Output in ",(0,i.jsx)(r.a,{href:"https://www.w3.org/TR/n-triples/",children:"N-Triples"})," format."]}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsx)(r.tr,{children:(0,i.jsx)(r.th,{children:"literal"})})}),(0,i.jsx)(r.tbody,{children:(0,i.jsx)(r.tr,{children:(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:'"n_triples"'})})})})]}),"\n",(0,i.jsx)(r.h3,{id:"namednode",children:"NamedNode"}),"\n",(0,i.jsxs)(r.p,{children:["An RDF ",(0,i.jsx)(r.a,{href:"https://www.w3.org/TR/rdf11-concepts/#dfn-iri",children:"IRI"}),"."]}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"property"}),(0,i.jsx)(r.th,{children:"description"})]})}),(0,i.jsx)(r.tbody,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"named_node"})}),(0,i.jsxs)(r.td,{children:["*(Required.) * ",(0,i.jsxs)(r.strong,{children:[(0,i.jsx)(r.a,{href:"#prefixed",children:"Prefixed"}),"|",(0,i.jsx)(r.a,{href:"#full",children:"Full"})]}),"."]})]})})]}),"\n",(0,i.jsx)(r.h3,{id:"node",children:"Node"}),"\n",(0,i.jsx)(r.p,{children:"Represents either an IRI (named node) or a blank node."}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"variant"}),(0,i.jsx)(r.th,{children:"description"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"#namednode",children:"NamedNode"})}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:"object"}),". An RDF ",(0,i.jsx)(r.a,{href:"https://www.w3.org/TR/rdf11-concepts/#dfn-iri",children:"IRI"}),"."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"#blanknode",children:"BlankNode"})}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:"object"}),". An RDF ",(0,i.jsx)(r.a,{href:"https://www.w3.org/TR/rdf11-concepts/#dfn-blank-node",children:"blank node"}),"."]})]})]})]}),"\n",(0,i.jsx)(r.h3,{id:"prefix",children:"Prefix"}),"\n",(0,i.jsx)(r.p,{children:"Represents a prefix, i.e. a shortcut for a namespace used in a query."}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"property"}),(0,i.jsx)(r.th,{children:"description"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"namespace"})}),(0,i.jsxs)(r.td,{children:["*(Required.) * ",(0,i.jsx)(r.strong,{children:"string"}),". The namespace associated with the prefix."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"prefix"})}),(0,i.jsxs)(r.td,{children:["*(Required.) * ",(0,i.jsx)(r.strong,{children:"string"}),". The prefix."]})]})]})]}),"\n",(0,i.jsx)(r.h3,{id:"prefixed",children:"Prefixed"}),"\n",(0,i.jsxs)(r.p,{children:["An IRI prefixed with a prefix. The prefixed IRI is expanded to a full IRI using the prefix definition specified in the query. For example, the prefixed IRI ",(0,i.jsx)(r.code,{children:"rdf:type"})," is expanded to ",(0,i.jsx)(r.code,{children:"http://www.w3.org/1999/02/22-rdf-syntax-ns#type"}),"."]}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"property"}),(0,i.jsx)(r.th,{children:"description"})]})}),(0,i.jsx)(r.tbody,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"prefixed"})}),(0,i.jsxs)(r.td,{children:["*(Required.) * ",(0,i.jsx)(r.strong,{children:"string"}),"."]})]})})]}),"\n",(0,i.jsx)(r.h3,{id:"rdf-xml",children:"RDF XML"}),"\n",(0,i.jsxs)(r.p,{children:["Output in ",(0,i.jsx)(r.a,{href:"https://www.w3.org/TR/rdf-syntax-grammar/",children:"RDF/XML"})," format."]}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsx)(r.tr,{children:(0,i.jsx)(r.th,{children:"literal"})})}),(0,i.jsx)(r.tbody,{children:(0,i.jsx)(r.tr,{children:(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:'"rdf_xml"'})})})})]}),"\n",(0,i.jsx)(r.h3,{id:"results",children:"Results"}),"\n",(0,i.jsx)(r.p,{children:"Represents the results of a [SelectResponse]."}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"property"}),(0,i.jsx)(r.th,{children:"description"})]})}),(0,i.jsx)(r.tbody,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"bindings"})}),(0,i.jsxs)(r.td,{children:["*(Required.) * ",(0,i.jsx)(r.strong,{children:"Array<object>"}),". The bindings of the results."]})]})})]}),"\n",(0,i.jsx)(r.h3,{id:"selectitem",children:"SelectItem"}),"\n",(0,i.jsx)(r.p,{children:"Represents an item to select in a [SelectQuery]."}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"variant"}),(0,i.jsx)(r.th,{children:"description"})]})}),(0,i.jsx)(r.tbody,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"#variable",children:"Variable"})}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:"object"}),". Represents a variable."]})]})})]}),"\n",(0,i.jsx)(r.h3,{id:"selectquery",children:"SelectQuery"}),"\n",(0,i.jsx)(r.p,{children:"Represents a SELECT query over the triple store, allowing to select variables to return and to filter the results."}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"property"}),(0,i.jsx)(r.th,{children:"description"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"limit"})}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:"integer|null"}),". The maximum number of results to return. If ",(0,i.jsx)(r.code,{children:"None"}),", there is no limit. Note: the value of the limit cannot exceed the maximum query limit defined in the store limitations."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"prefixes"})}),(0,i.jsxs)(r.td,{children:["*(Required.) * ",(0,i.jsxs)(r.strong,{children:["Array<",(0,i.jsx)(r.a,{href:"#prefix",children:"Prefix"}),">"]}),". The prefixes used in the query."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"select"})}),(0,i.jsxs)(r.td,{children:["*(Required.) * ",(0,i.jsxs)(r.strong,{children:["Array<",(0,i.jsx)(r.a,{href:"#selectitem",children:"SelectItem"}),">"]}),". The items to select. Note: the number of items to select cannot exceed the maximum query variable count defined in the store limitations."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"where"})}),(0,i.jsxs)(r.td,{children:["*(Required.) * ",(0,i.jsxs)(r.strong,{children:["Array<",(0,i.jsx)(r.a,{href:"#wherecondition",children:"WhereCondition"}),">"]}),". The WHERE clause. If ",(0,i.jsx)(r.code,{children:"None"}),", there is no WHERE clause, i.e. all triples are returned without filtering."]})]})]})]}),"\n",(0,i.jsx)(r.h3,{id:"simple",children:"Simple"}),"\n",(0,i.jsxs)(r.p,{children:["A ",(0,i.jsx)(r.a,{href:"https://www.w3.org/TR/rdf11-concepts/#dfn-simple-literal",children:"simple literal"})," without datatype or language form."]}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"property"}),(0,i.jsx)(r.th,{children:"description"})]})}),(0,i.jsx)(r.tbody,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"simple"})}),(0,i.jsxs)(r.td,{children:["*(Required.) * ",(0,i.jsx)(r.strong,{children:"string"}),"."]})]})})]}),"\n",(0,i.jsx)(r.h3,{id:"simplewherecondition",children:"SimpleWhereCondition"}),"\n",(0,i.jsx)(r.p,{children:"Represents a simple condition in a [WhereCondition]."}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"variant"}),(0,i.jsx)(r.th,{children:"description"})]})}),(0,i.jsx)(r.tbody,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"#triplepattern",children:"TriplePattern"})}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:"object"}),". Represents a triple pattern, i.e. a condition on a triple based on its subject, predicate and object."]})]})})]}),"\n",(0,i.jsx)(r.h3,{id:"storelimits",children:"StoreLimits"}),"\n",(0,i.jsx)(r.p,{children:"Contains limitations regarding store usages."}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"property"}),(0,i.jsx)(r.th,{children:"description"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"max_byte_size"})}),(0,i.jsxs)(r.td,{children:["*(Required.) * ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#uint128",children:"Uint128"})}),". The maximum number of bytes the store can contain. The size of a triple is counted as the sum of the size of its subject, predicate and object, including the size of data types and language tags if any."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"max_insert_data_byte_size"})}),(0,i.jsxs)(r.td,{children:["*(Required.) * ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#uint128",children:"Uint128"})}),". The maximum number of bytes an insert data query can contain."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"max_insert_data_triple_count"})}),(0,i.jsxs)(r.td,{children:["*(Required.) * ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#uint128",children:"Uint128"})}),". The maximum number of triples an insert data query can contain (after parsing)."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"max_query_limit"})}),(0,i.jsxs)(r.td,{children:["*(Required.) * ",(0,i.jsx)(r.strong,{children:"integer"}),". The maximum limit of a query, i.e. the maximum number of triples returned by a select query."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"max_query_variable_count"})}),(0,i.jsxs)(r.td,{children:["*(Required.) * ",(0,i.jsx)(r.strong,{children:"integer"}),". The maximum number of variables a query can select."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"max_triple_byte_size"})}),(0,i.jsxs)(r.td,{children:["*(Required.) * ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#uint128",children:"Uint128"})}),". The maximum number of bytes the store can contain for a single triple. The size of a triple is counted as the sum of the size of its subject, predicate and object, including the size of data types and language tags if any. The limit is used to prevent storing very large triples, especially literals."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"max_triple_count"})}),(0,i.jsxs)(r.td,{children:["*(Required.) * ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#uint128",children:"Uint128"})}),". The maximum number of triples the store can contain."]})]})]})]}),"\n",(0,i.jsx)(r.h3,{id:"storelimitsinput",children:"StoreLimitsInput"}),"\n",(0,i.jsx)(r.p,{children:"Contains requested limitations regarding store usages."}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"property"}),(0,i.jsx)(r.th,{children:"description"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"max_byte_size"})}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#uint128",children:"Uint128"})}),". The maximum number of bytes the store can contain. The size of a triple is counted as the sum of the size of its subject, predicate and object, including the size of data types and language tags if any. Default to [Uint128::MAX] if not set, which can be considered as no limit."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"max_insert_data_byte_size"})}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#uint128",children:"Uint128"})}),". The maximum number of bytes an insert data query can contain. Default to [Uint128::MAX] if not set, which can be considered as no limit."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"max_insert_data_triple_count"})}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#uint128",children:"Uint128"})}),". The maximum number of triples an insert data query can contain (after parsing). Default to [Uint128::MAX] if not set, which can be considered as no limit."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"max_query_limit"})}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:"integer"}),". The maximum limit of a query, i.e. the maximum number of triples returned by a select query. Default to 30 if not set."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"max_query_variable_count"})}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:"integer"}),". The maximum number of variables a query can select. Default to 30 if not set."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"max_triple_byte_size"})}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#uint128",children:"Uint128"})}),". The maximum number of bytes the store can contain for a single triple. The size of a triple is counted as the sum of the size of its subject, predicate and object, including the size of data types and language tags if any. The limit is used to prevent storing very large triples, especially literals. Default to [Uint128::MAX] if not set, which can be considered as no limit."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"max_triple_count"})}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#uint128",children:"Uint128"})}),". The maximum number of triples the store can contain. Default to [Uint128::MAX] if not set, which can be considered as no limit."]})]})]})]}),"\n",(0,i.jsx)(r.h3,{id:"storestat",children:"StoreStat"}),"\n",(0,i.jsx)(r.p,{children:"Contains usage information about the triple store."}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"property"}),(0,i.jsx)(r.th,{children:"description"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"byte_size"})}),(0,i.jsxs)(r.td,{children:["*(Required.) * ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#uint128",children:"Uint128"})}),". The total triple size in the store, in bytes."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"namespace_count"})}),(0,i.jsxs)(r.td,{children:["*(Required.) * ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#uint128",children:"Uint128"})}),". The total number of IRI namespace present in the store."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"triple_count"})}),(0,i.jsxs)(r.td,{children:["*(Required.) * ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#uint128",children:"Uint128"})}),". The total number of triple present in the store."]})]})]})]}),"\n",(0,i.jsx)(r.h3,{id:"triplepattern",children:"TriplePattern"}),"\n",(0,i.jsx)(r.p,{children:"Represents a triple pattern in a [SimpleWhereCondition]."}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"property"}),(0,i.jsx)(r.th,{children:"description"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"object"})}),(0,i.jsxs)(r.td,{children:["*(Required.) * ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#varornodeorliteral",children:"VarOrNodeOrLiteral"})}),". The object of the triple pattern."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"predicate"})}),(0,i.jsxs)(r.td,{children:["*(Required.) * ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#varornode",children:"VarOrNode"})}),". The predicate of the triple pattern."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"subject"})}),(0,i.jsxs)(r.td,{children:["*(Required.) * ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#varornode",children:"VarOrNode"})}),". The subject of the triple pattern."]})]})]})]}),"\n",(0,i.jsx)(r.h3,{id:"turtle",children:"Turtle"}),"\n",(0,i.jsxs)(r.p,{children:["Output in ",(0,i.jsx)(r.a,{href:"https://www.w3.org/TR/turtle/",children:"Turtle"})," format."]}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsx)(r.tr,{children:(0,i.jsx)(r.th,{children:"literal"})})}),(0,i.jsx)(r.tbody,{children:(0,i.jsx)(r.tr,{children:(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:'"turtle"'})})})})]}),"\n",(0,i.jsx)(r.h3,{id:"typedvalue",children:"TypedValue"}),"\n",(0,i.jsx)(r.p,{children:"A value with a datatype."}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"property"}),(0,i.jsx)(r.th,{children:"description"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"typed_value"})}),(0,i.jsxs)(r.td,{children:["*(Required.) * ",(0,i.jsx)(r.strong,{children:"object"}),"."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"typed_value.datatype"})}),(0,i.jsxs)(r.td,{children:["*(Required.) * ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#iri",children:"IRI"})}),". The ",(0,i.jsx)(r.a,{href:"https://www.w3.org/TR/rdf11-concepts/#dfn-datatype-iri",children:"datatype IRI"}),"."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"typed_value.value"})}),(0,i.jsxs)(r.td,{children:["*(Required.) * ",(0,i.jsx)(r.strong,{children:"string"}),". The ",(0,i.jsx)(r.a,{href:"https://www.w3.org/TR/rdf11-concepts/#dfn-lexical-form",children:"lexical form"}),"."]})]})]})]}),"\n",(0,i.jsx)(r.h3,{id:"uri",children:"URI"}),"\n",(0,i.jsx)(r.p,{children:"Represents an IRI."}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"property"}),(0,i.jsx)(r.th,{children:"description"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"type"})}),(0,i.jsxs)(r.td,{children:["*(Required.) * ",(0,i.jsx)(r.strong,{children:"string"}),"."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"value"})}),(0,i.jsxs)(r.td,{children:["*(Required.) * ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#iri",children:"IRI"})}),". The value of the IRI."]})]})]})]}),"\n",(0,i.jsx)(r.h3,{id:"uint128",children:"Uint128"}),"\n",(0,i.jsx)(r.p,{children:"A string containing a 128-bit integer in decimal representation."}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsx)(r.tr,{children:(0,i.jsx)(r.th,{children:"type"})})}),(0,i.jsx)(r.tbody,{children:(0,i.jsx)(r.tr,{children:(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:"string"}),"."]})})})]}),"\n",(0,i.jsx)(r.h3,{id:"value",children:"Value"}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"variant"}),(0,i.jsx)(r.th,{children:"description"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"#uri",children:"URI"})}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:"object"}),". Represents an IRI."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"#literal",children:"Literal"})}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:"object"}),". Represents a literal S with optional language tag L or datatype IRI D."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"#blanknode",children:"BlankNode"})}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:"object"}),". Represents a blank node."]})]})]})]}),"\n",(0,i.jsx)(r.h3,{id:"varornamednode",children:"VarOrNamedNode"}),"\n",(0,i.jsx)(r.p,{children:"Represents either a variable or a named node (IRI)."}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"variant"}),(0,i.jsx)(r.th,{children:"description"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"#variable",children:"Variable"})}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:"object"}),". A variable."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"#namednode",children:"NamedNode"})}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:"object"}),". An RDF ",(0,i.jsx)(r.a,{href:"https://www.w3.org/TR/rdf11-concepts/#dfn-iri",children:"IRI"}),"."]})]})]})]}),"\n",(0,i.jsx)(r.h3,{id:"varornode",children:"VarOrNode"}),"\n",(0,i.jsx)(r.p,{children:"Represents either a variable or a node."}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"variant"}),(0,i.jsx)(r.th,{children:"description"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"#variable",children:"Variable"})}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:"object"}),". A variable."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"#node",children:"Node"})}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:"object"}),". A node, i.e. an IRI or a blank node."]})]})]})]}),"\n",(0,i.jsx)(r.h3,{id:"varornodeorliteral",children:"VarOrNodeOrLiteral"}),"\n",(0,i.jsx)(r.p,{children:"Represents either a variable, a node or a literal."}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"variant"}),(0,i.jsx)(r.th,{children:"description"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"#variable",children:"Variable"})}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:"object"}),". A variable."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"#node",children:"Node"})}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:"object"}),". A node, i.e. an IRI or a blank node."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"#literal",children:"Literal"})}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:"object"}),". An RDF ",(0,i.jsx)(r.a,{href:"https://www.w3.org/TR/rdf11-concepts/#dfn-literal",children:"literal"}),", i.e. a simple literal, a language-tagged string or a typed value."]})]})]})]}),"\n",(0,i.jsx)(r.h3,{id:"variable",children:"Variable"}),"\n",(0,i.jsx)(r.p,{children:"A variable."}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"property"}),(0,i.jsx)(r.th,{children:"description"})]})}),(0,i.jsx)(r.tbody,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"variable"})}),(0,i.jsxs)(r.td,{children:["*(Required.) * ",(0,i.jsx)(r.strong,{children:"string"}),"."]})]})})]}),"\n",(0,i.jsx)(r.h3,{id:"wherecondition",children:"WhereCondition"}),"\n",(0,i.jsx)(r.p,{children:"Represents a condition in a [WhereClause]."}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"variant"}),(0,i.jsx)(r.th,{children:"description"})]})}),(0,i.jsx)(r.tbody,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"#simple",children:"Simple"})}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:"object"}),". Represents a simple condition."]})]})})]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsxs)(r.em,{children:["Rendered by ",(0,i.jsx)(r.a,{href:"https://fadroma.tech",children:"Fadroma"})," (",(0,i.jsx)(r.a,{href:"https://www.npmjs.com/package/@fadroma/schema",children:"@fadroma/schema 1.1.0"}),") from ",(0,i.jsx)(r.code,{children:"okp4-cognitarium.json"})," (",(0,i.jsx)(r.code,{children:"0b746186a6e8df78"}),")"]})})]})}function x(e={}){const{wrapper:r}={...(0,t.a)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},11151:(e,r,s)=>{s.d(r,{Z:()=>l,a:()=>d});var i=s(67294);const t={},n=i.createContext(t);function d(e){const r=i.useContext(n);return i.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),i.createElement(n.Provider,{value:r},e.children)}}}]);