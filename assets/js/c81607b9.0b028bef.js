"use strict";(self.webpackChunk_axone_docs=self.webpackChunk_axone_docs||[]).push([[71077],{38695:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>r,default:()=>m,frontMatter:()=>d,metadata:()=>i,toc:()=>c});var o=t(85893),a=t(11151);const d={},r=void 0,i={id:"okp4d_query_bank_denom-metadata",title:"okp4d_query_bank_denom-metadata",description:"okp4d query bank denom-metadata",source:"@site/commands_versioned_docs/version-v5.0.0/okp4d_query_bank_denom-metadata.md",sourceDirName:".",slug:"/okp4d_query_bank_denom-metadata",permalink:"/commands/v5.0.0/okp4d_query_bank_denom-metadata",draft:!1,unlisted:!1,tags:[],version:"v5.0.0",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"okp4d_query_bank_balances",permalink:"/commands/v5.0.0/okp4d_query_bank_balances"},next:{title:"okp4d_query_bank_send-enabled",permalink:"/commands/v5.0.0/okp4d_query_bank_send-enabled"}},s={},c=[{value:"okp4d query bank denom-metadata",id:"okp4d-query-bank-denom-metadata",level:2},{value:"Synopsis",id:"synopsis",level:3},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3}];function l(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"okp4d-query-bank-denom-metadata",children:"okp4d query bank denom-metadata"}),"\n",(0,o.jsx)(n.p,{children:"Query the client metadata for coin denominations"}),"\n",(0,o.jsx)(n.h3,{id:"synopsis",children:"Synopsis"}),"\n",(0,o.jsx)(n.p,{children:"Query the client metadata for all the registered coin denominations"}),"\n",(0,o.jsx)(n.p,{children:"Example:\nTo query for the client metadata of all coin denominations use:\n$ okp4d query bank denom-metadata"}),"\n",(0,o.jsx)(n.p,{children:"To query for the client metadata of a specific coin denomination use:\n$ okp4d query bank denom-metadata --denom=[denom]"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"okp4d query bank denom-metadata [flags]\n"})}),"\n",(0,o.jsx)(n.h3,{id:"options",children:"Options"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'      --denom string       The specific denomination to query client metadata for\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for denom-metadata\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")\n  -o, --output string      Output format (text|json) (default "text")\n'})}),"\n",(0,o.jsx)(n.h3,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'      --chain-id string   The network chain ID (default "okp4d")\n'})}),"\n",(0,o.jsx)(n.h3,{id:"see-also",children:"SEE ALSO"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"/commands/v5.0.0/okp4d_query_bank",children:"okp4d query bank"}),"\t - Querying commands for the bank module"]}),"\n"]})]})}function m(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>i,a:()=>r});var o=t(67294);const a={},d=o.createContext(a);function r(e){const n=o.useContext(d);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),o.createElement(d.Provider,{value:n},e.children)}}}]);