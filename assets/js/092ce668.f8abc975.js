"use strict";(self.webpackChunk_axone_docs=self.webpackChunk_axone_docs||[]).push([[51245],{93384:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>a});var t=s(85893),c=s(11151);const o={},r=void 0,i={id:"okp4d_query_ibc_channel_next-sequence-send",title:"okp4d_query_ibc_channel_next-sequence-send",description:"okp4d query ibc channel next-sequence-send",source:"@site/commands_versioned_docs/version-v6.0.0/okp4d_query_ibc_channel_next-sequence-send.md",sourceDirName:".",slug:"/okp4d_query_ibc_channel_next-sequence-send",permalink:"/commands/v6.0.0/okp4d_query_ibc_channel_next-sequence-send",draft:!1,unlisted:!1,tags:[],version:"v6.0.0",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"okp4d_query_ibc_channel_next-sequence-receive",permalink:"/commands/v6.0.0/okp4d_query_ibc_channel_next-sequence-receive"},next:{title:"okp4d_query_ibc_channel_packet-ack",permalink:"/commands/v6.0.0/okp4d_query_ibc_channel_packet-ack"}},d={},a=[{value:"okp4d query ibc channel next-sequence-send",id:"okp4d-query-ibc-channel-next-sequence-send",level:2},{value:"Synopsis",id:"synopsis",level:3},{value:"Examples",id:"examples",level:3},{value:"Options",id:"options",level:3},{value:"SEE ALSO",id:"see-also",level:3}];function l(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,c.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"okp4d-query-ibc-channel-next-sequence-send",children:"okp4d query ibc channel next-sequence-send"}),"\n",(0,t.jsx)(n.p,{children:"Query a next send sequence"}),"\n",(0,t.jsx)(n.h3,{id:"synopsis",children:"Synopsis"}),"\n",(0,t.jsx)(n.p,{children:"Query the next sequence send for a given channel"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"okp4d query ibc channel next-sequence-send [port-id] [channel-id] [flags]\n"})}),"\n",(0,t.jsx)(n.h3,{id:"examples",children:"Examples"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"okp4d query ibc channel next-sequence-send [port-id] [channel-id]\n"})}),"\n",(0,t.jsx)(n.h3,{id:"options",children:"Options"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for next-sequence-send\n      --node string        <host>:<port> to CometBFT RPC interface for this chain (default "tcp://localhost:26657")\n  -o, --output string      Output format (text|json) (default "text")\n      --prove              show proofs for the query results (default true)\n'})}),"\n",(0,t.jsx)(n.h3,{id:"see-also",children:"SEE ALSO"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/commands/next/okp4d_query_ibc_channel",children:"okp4d query ibc channel"}),"\t - IBC channel query subcommands"]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,c.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},11151:(e,n,s)=>{s.d(n,{Z:()=>i,a:()=>r});var t=s(67294);const c={},o=t.createContext(c);function r(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:r(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);