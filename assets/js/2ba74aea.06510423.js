"use strict";(self.webpackChunk_axone_docs=self.webpackChunk_axone_docs||[]).push([[64631],{66173:(n,e,o)=>{o.r(e),o.d(e,{assets:()=>r,contentTitle:()=>s,default:()=>u,frontMatter:()=>i,metadata:()=>a,toc:()=>l});var t=o(85893),c=o(11151);const i={},s=void 0,a={id:"axoned_query_ibc_channel_connections",title:"axoned_query_ibc_channel_connections",description:"axoned query ibc channel connections",source:"@site/commands/axoned_query_ibc_channel_connections.md",sourceDirName:".",slug:"/axoned_query_ibc_channel_connections",permalink:"/commands/next/axoned_query_ibc_channel_connections",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"axoned_query_ibc_channel_client-state",permalink:"/commands/next/axoned_query_ibc_channel_client-state"},next:{title:"axoned_query_ibc_channel_end",permalink:"/commands/next/axoned_query_ibc_channel_end"}},r={},l=[{value:"axoned query ibc channel connections",id:"axoned-query-ibc-channel-connections",level:2},{value:"Synopsis",id:"synopsis",level:3},{value:"Examples",id:"examples",level:3},{value:"Options",id:"options",level:3},{value:"SEE ALSO",id:"see-also",level:3}];function d(n){const e={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,c.a)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h2,{id:"axoned-query-ibc-channel-connections",children:"axoned query ibc channel connections"}),"\n",(0,t.jsx)(e.p,{children:"Query all channels associated with a connection"}),"\n",(0,t.jsx)(e.h3,{id:"synopsis",children:"Synopsis"}),"\n",(0,t.jsx)(e.p,{children:"Query all channels associated with a connection"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"axoned query ibc channel connections [connection-id] [flags]\n"})}),"\n",(0,t.jsx)(e.h3,{id:"examples",children:"Examples"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"axoned query ibc channel connections [connection-id]\n"})}),"\n",(0,t.jsx)(e.h3,{id:"options",children:"Options"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:'      --count-total        count total number of records in channels associated with a connection to query for\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for connections\n      --limit uint         pagination limit of channels associated with a connection to query for (default 100)\n      --node string        <host>:<port> to CometBFT RPC interface for this chain (default "tcp://localhost:26657")\n      --offset uint        pagination offset of channels associated with a connection to query for\n  -o, --output string      Output format (text|json) (default "text")\n      --page uint          pagination page of channels associated with a connection to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string    pagination page-key of channels associated with a connection to query for\n      --reverse            results are sorted in descending order\n'})}),"\n",(0,t.jsx)(e.h3,{id:"see-also",children:"SEE ALSO"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.a,{href:"/commands/next/axoned_query_ibc_channel",children:"axoned query ibc channel"}),"\t - IBC channel query subcommands"]}),"\n"]})]})}function u(n={}){const{wrapper:e}={...(0,c.a)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(d,{...n})}):d(n)}},11151:(n,e,o)=>{o.d(e,{Z:()=>a,a:()=>s});var t=o(67294);const c={},i=t.createContext(c);function s(n){const e=t.useContext(i);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(c):n.components||c:s(n.components),t.createElement(i.Provider,{value:e},n.children)}}}]);