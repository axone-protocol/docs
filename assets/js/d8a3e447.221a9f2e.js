"use strict";(self.webpackChunk_axone_docs=self.webpackChunk_axone_docs||[]).push([[34382],{7922:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>l,frontMatter:()=>r,metadata:()=>c,toc:()=>a});var i=n(85893),s=n(11151);const r={},o=void 0,c={id:"axoned_query_circuit_disabled-list",title:"axoned_query_circuit_disabled-list",description:"axoned query circuit disabled-list",source:"@site/commands/axoned_query_circuit_disabled-list.md",sourceDirName:".",slug:"/axoned_query_circuit_disabled-list",permalink:"/commands/next/axoned_query_circuit_disabled-list",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"axoned_query_circuit_accounts",permalink:"/commands/next/axoned_query_circuit_accounts"},next:{title:"axoned_query_consensus",permalink:"/commands/next/axoned_query_consensus"}},d={},a=[{value:"axoned query circuit disabled-list",id:"axoned-query-circuit-disabled-list",level:2},{value:"Options",id:"options",level:3},{value:"SEE ALSO",id:"see-also",level:3}];function u(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h2,{id:"axoned-query-circuit-disabled-list",children:"axoned query circuit disabled-list"}),"\n",(0,i.jsx)(t.p,{children:"Query a list of all disabled message types"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"axoned query circuit disabled-list [flags]\n"})}),"\n",(0,i.jsx)(t.h3,{id:"options",children:"Options"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:'      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for disabled-list\n      --no-indent          Do not indent JSON output\n      --node string        <host>:<port> to CometBFT RPC interface for this chain (default "tcp://localhost:26657")\n  -o, --output string      Output format (text|json) (default "text")\n'})}),"\n",(0,i.jsx)(t.h3,{id:"see-also",children:"SEE ALSO"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"/commands/next/axoned_query_circuit",children:"axoned query circuit"}),"\t - Querying commands for the circuit module"]}),"\n"]})]})}function l(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},11151:(e,t,n)=>{n.d(t,{Z:()=>c,a:()=>o});var i=n(67294);const s={},r=i.createContext(s);function o(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);